{"version":3,"sources":["BooksAPI.js","BookObject.js","BookShelf.js","SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","BookObject","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bookStateHandler","e","updateBookState","target","value","formatAuthorName","authors","undefined","sentence","map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","author","push","err","return","join","handleImage","bind","assertThisInitialized","queriedBook","checkBook","allBooks","filter","length","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","defaultValue","handleShelf","disabled","title","Component","BookShelf","_this$props","booksArray","filteredBooks","bookToObject","shelfID","shelfTitle","key","BookObject_BookObject","SearchPage","updateQuery","query","setState","bookQuery","search","debounce","state","queriedBooks","_this2","data","books","BooksAPI","fetchedBooks","error","_this3","react_router_dom","to","event","type","placeholder","BooksApp","shelves","updateShelf","prevState","react_router","exact","path","render","BookShelf_BookShelf","SearchPage_SearchPage","React","ReactDOM","App_BooksApp","document","getElementById"],"mappings":"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","file":"static/js/main.758f6269.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react';\r\n\r\n/*\r\n  This class will receive the Book Object and generate its unique UI\r\n*/\r\n\r\nexport default class BookObject extends Component{\r\n  \r\n  \tconstructor(props){\r\n    \tsuper(props)\r\n      \tthis.handleImage = this.handleImage.bind(this);\r\n    }\r\n  \r\n    bookStateHandler = (e) => {this.props.updateBookState(this.props.book, e.target.value)};\r\n    \r\n    formatAuthorName = () => {\r\n      if (this.props.book.authors !== null && this.props.book.authors !== undefined ) {\r\n          var sentence = [];\r\n          const authors = this.props.book.authors.map(authors => authors);\r\n          for(const author of authors){\r\n            sentence.push(author);\r\n          }\r\n          return sentence.join(', ');\r\n      } else {\r\n          const noAuthor = 'No author';\r\n          return noAuthor; \r\n      }\r\n      \r\n    }\r\n\r\n\thandleShelf(queriedBook){\r\n    \t//Let's check if the book has a shelf\r\n      \tif(queriedBook.shelf){\r\n          return queriedBook.shelf\r\n        }else{\r\n      \t//Since the search method doesn't fetch a books' shelves, we need to compare the books to our shelves\r\n    \t\tconst checkBook = this.props.allBooks.filter((book) => book.id === queriedBook.id);\r\n\t\t\tif(checkBook.length === 0){\r\n            \treturn \"none\";\r\n            }else{\r\n            //The filter method used to generate checkBook returns an array, that's why we must access its first element  \r\n            \treturn checkBook[0].shelf;\r\n            }\r\n    \t}\r\n    \t\r\n    \r\n    }\r\n\r\n\thandleImage(queriedBook){\r\n      //The book object must have an imageLinks array which must contain a thumbnail as well\r\n\t\tif(queriedBook.imageLinks && queriedBook.imageLinks.thumbnail){\r\n        \treturn `url(${queriedBook.imageLinks.thumbnail})`\r\n        } else {\r\n    \t\treturn 'No image resource'\r\n    \t}\r\n    }\r\n\r\n    render(){\r\n      const {book} = this.props;\r\n        return(\r\n            <div className=\"book\">\r\n                 <div className=\"book-top\">\r\n                    <div className=\"book-cover\" \r\n          \t\t\t\tstyle={{ width: 128, height: 193, backgroundImage: `${this.handleImage(book)}` }}>\r\n                        </div>\r\n\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select onChange={this.bookStateHandler} \tdefaultValue={this.handleShelf(book)}>\r\n                                    <option value=\"move\" disabled>Move to...</option>\r\n                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                    <option value=\"read\">Read</option>\r\n                                    <option value=\"none\">None</option>\r\n                                  </select>\r\n                            </div>\r\n\r\n                         </div>\r\n\r\n                     <div className=\"book-title\">{book.title}</div>\r\n                  <div className=\"book-authors\">{this.formatAuthorName()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Book from './BookObject'\r\n\r\n/*\r\nThe BookShelf shall receive a list of Books, it shall then create book objects\r\nfor each book it has received.\r\n*/\r\n\r\nexport default class BookShelf extends Component{\r\n\t\r\n\r\n    render(){\r\n        const {booksArray, update} = this.props;\r\n        const filteredBooks = booksArray.filter((bookToObject) => bookToObject.shelf === this.props.shelfID);\r\n        return(\r\n            <div>\r\n                {filteredBooks !== [] && \r\n                <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">{this.props.shelfTitle}</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                      \r\n                        {filteredBooks.map((bookToObject) =>\r\n                            <li key={bookToObject.id}><Book  updateBookState={update}  book={bookToObject}/></li>\r\n                        )}\r\n  \r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  ","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './BookObject'\r\nimport debounce from 'debounce'\r\n\r\nexport default class SearchPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n      \tthis.search = debounce(this.search.bind(this), 500);\r\n        this.state = {\r\n          bookQuery: '',\r\n          queriedBooks: [],\r\n        }\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n      this.setState({bookQuery: query})\r\n      this.search(query);\r\n      \r\n    }\r\n\r\n\tsearch(query){\r\n      if(query !== ''){\r\n        BooksAPI.search(query)\r\n           .then(fetchedBooks => {this.setState({queriedBooks: fetchedBooks.error ? [] : fetchedBooks})})\r\n      } else {\r\n        this.setState({queriedBooks: []})\r\n\t  }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n      const {update} = this.props;\r\n        return(\r\n            <div className=\"search-books\">\r\n            \t<div className=\"search-books-bar\">\r\n           \t\t\t<Link className=\"close-search\" to='/'>Close</Link>\r\n          \r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input \r\n                        value={this.state.bookQuery}\r\n                        onChange={(event) => this.updateQuery(event.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title or author\"/>\r\n                    </div>\r\n\r\n             \t</div>\r\n\r\n               {this.state.queriedBooks !== []  &&\r\n                      <div className=\"search-books-results\">\r\n                          <ol className=\"books-grid\"> \r\n                \r\n                              {this.state.queriedBooks.map((bookToObject) => \r\n                                      <li key={bookToObject.id}>\r\n                                          <Book allBooks={this.props.allBooks} updateBookState={update} book={bookToObject}/>\r\n                                      </li> \r\n                              )}\r\n\r\n                          </ol>\r\n                      </div>\r\n\t\t\t\t}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Shelf from './BookShelf'\nimport SearchPage from './SearchPage'\nimport {Link, Route} from 'react-router-dom';\n\nexport default class BooksApp extends React.Component {\n  state = {\n    allBooks: [],\n    shelves: [{shelfID:'currentlyReading', title: 'Currently Reading'},\n     {shelfID: 'wantToRead', title: 'Want to Read'},{shelfID:'read', title: 'Read'}]\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll().then((allBooks) => {\n      this.setState(() => ({allBooks}))\n    })\n  }\n\n  updateShelf = (book, shelf) => {\n    //We filter all the books different than the one we are updating,\n    //then we concat the filtered array to the updated book\n    BooksAPI.update(book, shelf).then(  \n    this.setState((prevState) => ({allBooks: prevState.allBooks\n                                   .filter(books => books.id !== book.id)\n                                   .concat([{...book, shelf}])}))\n    );\n  }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n           <Route exact path='/' render={() => (\n    \n                <div className=\"list-books\">\n   \n                  <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                  </div>\n    \n                   {this.state.allBooks !== [] &&\n                    \tthis.state.shelves.map( (shelf) => \n                          <Shelf\n                          key={shelf.shelfID} \n                          update={this.updateShelf}\n                          booksArray={this.state.allBooks}\n                          shelfID={shelf.shelfID}\n                          shelfTitle={shelf.title}/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n                  <div className=\"open-search\">\n                    <Link to=\"/search\">Search</Link> \n                  </div>\n\n                </div>\n          )}/>\n\n          <Route exact path=\"/search\" render={() => (\n                <SearchPage allBooks={this.state.allBooks} update={this.updateShelf}/> \n          )}/>\n\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}